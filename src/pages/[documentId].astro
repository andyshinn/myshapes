---
import type { ImageMetadata } from 'astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import BaseLayout from '../layouts/BaseLayout.astro';
import Badge from '../components/Badge.astro';
import { SITE_NAME } from 'astro:env/server';

export async function getStaticPaths() {
  const documents = await getCollection('documents');
  return documents.map((doc) => ({
    params: { documentId: doc.data.documentId },
    props: { doc }
  }));
}

const { doc } = Astro.props;

// Dynamically import images
const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/*.png');

// Get the best thumbnail for the main image
const mainThumbnail = doc.data.thumbnails.find(t => t.size === '600x340') ||
                     doc.data.thumbnails[0];

// Sort versions by creation date (newest first)
const sortedVersions = [...doc.data.versions].sort((a, b) =>
  new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
);

const latestVersion = sortedVersions[0];
---

<BaseLayout
	title={`${doc.data.title} - ${SITE_NAME}`}
	description={doc.data.description || `CAD model: ${doc.data.title}`}
	showBackButton={true}
>
			<!-- Document Header -->
			<div class="mb-8">
				<div class="flex flex-wrap items-center gap-2 mb-4">
					<h1 class="text-4xl font-bold">{doc.data.title}</h1>
					{latestVersion && (
						<div class="badge badge-primary badge-lg">
							{latestVersion.name}
						</div>
					)}
				</div>

				{doc.data.labels.filter(label => label !== 'indexed').length > 0 && (
					<div class="flex flex-wrap gap-2 mb-4">
						{doc.data.labels.filter(label => label !== 'indexed').map((label) => (
							<Badge label={label} size="md" />
						))}
					</div>
				)}

				{doc.data.description && (
					<p class="text-lg text-base-content/80 max-w-4xl">
						{doc.data.description}
					</p>
				)}
			</div>

			<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
				<!-- Main Image and Info -->
				<div class="lg:col-span-2">
					<!-- Main Thumbnail -->
					<div class="card bg-base-100 shadow-lg mb-6">
						<figure>
							{mainThumbnail && images[`/src/images/${doc.data.documentId}-600x340.png`] ? (
								<Image
									src={images[`/src/images/${doc.data.documentId}-600x340.png`]()}
									alt={`${doc.data.title} preview`}
									class="w-full max-h-96 object-contain"
									width={600}
									height={340}
								/>
							) : (
								<div class="bg-base-300 w-full h-96 flex items-center justify-center">
									<span class="text-base-content/50 text-xl">No preview available</span>
								</div>
							)}
						</figure>
					</div>


					<!-- Description/Details -->
					<div class="card bg-base-100 shadow-lg">
						<div class="card-body">
							<h3 class="card-title">Details</h3>

							<div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
								<div>
									<span class="font-semibold">Created:</span>
									<span class="ml-2">{new Date(doc.data.createdAt).toLocaleDateString()}</span>
								</div>
								<div>
									<span class="font-semibold">Last Updated:</span>
									<span class="ml-2">{new Date(doc.data.updatedAt).toLocaleDateString()}</span>
								</div>
								<div>
									<span class="font-semibold">Versions:</span>
									<span class="ml-2">{doc.data.versions.length}</span>
								</div>
								{doc.data.userData.author && (
									<div>
										<span class="font-semibold">Author:</span>
										<span class="ml-2">
											{doc.data.userData.author.website ? (
												<a href={doc.data.userData.author.website} class="link link-primary" target="_blank" rel="noopener">
													{doc.data.userData.author.name}
												</a>
											) : (
												doc.data.userData.author.name
											)}
										</span>
									</div>
								)}
							</div>

							<div class="card-actions justify-start mt-6">
								<a
									href={`https://cad.onshape.com/documents/${doc.data.documentId}`}
									target="_blank"
									rel="noopener"
									class="btn btn-primary"
								>
									View in Onshape
								</a>
								{doc.data.userData.pdfElementId && (
									<a
										href={`/pdf/${doc.data.title.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '')}.pdf`}
										target="_blank"
										class="btn btn-error"
									>
										Download PDF
									</a>
								)}
							</div>
						</div>
					</div>
				</div>

				<!-- Sidebar -->
				<div class="lg:col-span-1">
					<!-- Version History -->
					<div class="card bg-base-100 shadow-lg mb-6">
						<div class="card-body">
							<h3 class="card-title">Version History</h3>
							{doc.data.versions.length === 0 && (
								<p class="text-base-content/70">No versions available for this document.</p>
							)}
							<ul class="timeline timeline-vertical">
								{sortedVersions.map((version, index) => (
									<li>
										{index > 0 && <hr />}
										<div class="timeline-start">{version.name}</div>
										<div class="timeline-middle">
											<svg
												xmlns="http://www.w3.org/2000/svg"
												viewBox="0 0 20 20"
												fill="currentColor"
												class="h-5 w-5"
											>
												<path
													fill-rule="evenodd"
													d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
													clip-rule="evenodd"
												/>
											</svg>
										</div>
										<div class="timeline-end timeline-box">
											<div class="font-semibold">{new Date(version.createdAt).toLocaleDateString()}</div>
											{version.description && (
												<div class="text-sm mt-1 text-base-content/70">{version.description}</div>
											)}
										</div>
										{index < sortedVersions.length - 1 && <hr />}
									</li>
								))}
							</ul>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</BaseLayout>
