---
import type { ImageMetadata } from 'astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import BaseLayout from '../layouts/BaseLayout.astro';
import Badge from '../components/Badge.astro';
import { SITE_NAME } from 'astro:env/server';

// Load all documents from the content collection
const documents = await getCollection('documents');

// Sort by most recently updated
const sortedDocuments = documents.sort((a, b) =>
  new Date(b.data.updatedAt).getTime() - new Date(a.data.updatedAt).getTime()
);

// Dynamically import images
const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/*.png');
---

<BaseLayout title={`${SITE_NAME} - CAD Model Gallery`} description="A collection of CAD models and technical documentation">
	<div slot="header-end" class="badge badge-primary">{documents.length} Models</div>
			<div class="text-center mb-12">
				<h2 class="text-4xl font-bold mb-4">CAD Model Gallery</h2>
				<p class="text-lg text-base-content/70 max-w-2xl mx-auto">
					Explore our collection of 3D models, technical documentation, and design iterations.
					Each model includes detailed specifications, version history, and downloadable PDFs.
				</p>
			</div>

			<!-- Document Grid -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
				{sortedDocuments.map((doc) => {
					// Get the best thumbnail (prefer 600x340 or largest available)
					const thumbnail = doc.data.thumbnails.find(t => t.size === '600x340') ||
					                 doc.data.thumbnails[0];

					// Try to load the image
					const imagePath = `/src/images/${doc.data.documentId}-600x340.png`;
					const hasImage = images[imagePath];

					return (
						<div class="card bg-base-100 shadow-sm">
							<figure>
								<a href={`/${doc.data.documentId}/`} class="block">
									{thumbnail ? (
										<Image
											src={images[imagePath]()}
											alt={`${doc.data.title} preview`}
											class="w-full h-48 object-cover hover:opacity-90 transition-opacity"
											loading="lazy"
											width={600}
											height={340}
										/>
									) : (
										<div class="bg-base-300 w-full h-48 flex items-center justify-center hover:bg-base-200 transition-colors">
											<span class="text-base-content/50">No preview available</span>
										</div>
									)}
								</a>
							</figure>

							<div class="card-body">
								<h3 class="card-title text-lg">
									<a href={`/${doc.data.documentId}/`} class="link link-hover">
										{doc.data.title}
									</a>
									{doc.data.versions.length > 0 && (
										<div class="badge badge-secondary badge-sm">
											{doc.data.versions[doc.data.versions.length - 1]?.name || doc.data.versions.length}
										</div>
									)}
								</h3>

								{doc.data.description && (
									<p class="text-sm text-base-content/70 line-clamp-2">
										{doc.data.description}
									</p>
								)}

								<!-- Labels -->
								{doc.data.labels.filter(label => label !== 'indexed').length > 0 && (
									<div class="flex flex-wrap gap-1 mt-2">
										{doc.data.labels.filter(label => label !== 'indexed').map((label) => (
											<Badge label={label} />
										))}
									</div>
								)}

								<!-- Stats -->
								<div class="flex justify-between items-center mt-4 text-sm text-base-content/60">
									<span>{doc.data.versions.length} version{doc.data.versions.length !== 1 ? 's' : ''}</span>
									<span>Updated {new Date(doc.data.updatedAt).toLocaleDateString()}</span>
								</div>

								<div class="card-actions justify-end mt-4">
									<a
										href={`/${doc.data.documentId}/`}
										class="btn btn-primary btn-sm"
									>
										View Details
									</a>
								</div>
							</div>
						</div>
					);
				})}
			</div>

			{documents.length === 0 && (
				<div class="text-center py-12">
					<div class="text-6xl mb-4">ðŸ“¦</div>
					<h3 class="text-2xl font-bold mb-2">No models yet</h3>
					<p class="text-base-content/70">
						Use the CLI tools to sync your first Onshape documents.
					</p>
				</div>
			)}
</BaseLayout>
